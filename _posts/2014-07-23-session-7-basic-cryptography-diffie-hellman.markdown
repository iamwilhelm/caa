---
layout: post
title:  "Session 7 Basic Cryptography and Diffie-Hellman"
date:   2014-07-23 05:03:51
categories: concept cryptography
---

There are three kinds of cryptography.

* Secret Cryptography
* Public-key Cryptography
* Hash Functions

## Diffie-Hellman

Diffie-Hellman is a public key encryption algorithm. It's used to agree on a secret key
to encrypt subsequent messages.

### Setting up N and its primitive G

Pick a large number, which we'll call N. Then pick a number, we call G, which is 
subject to two constraints:

1. G is less than N
2. G is a primitive of N

#### Example of a primitive

What is a [primitive][primitive]? G is a primitive of N, if the set generated by:

`G^i mod N for i = 1 to N-1 contains all numbers from 1 to N-1`

If `G = 3` and `N = 7`

Then the set

{% highlight ruby %}
  3^i mod 7 where i = 1 to N - 1
  = { 3^1 mod 7, 3^2 mod 7, 3^3 mod 7, ..., 3^6 mod 7}
  = { 3, 2, 6, 4, 5, 1 }
{% endhighlight %}

We can see that the set has all the numbers between 1 and N - 1, so G is a primitive of N.
We want G to be a primitive.

The mapping from i to f(i) needs to be guranteed to map to the entire space, so the 
encryption / decryption process can be mapped.

### Picking a private key

Then we have two parties, Alice and Bob.

Alice picks a random number Xa where Xa < N. That's Alice's private key.

Bob picks a random number Xb where Xb < N. That's Bob's private key.

### Calculating the public key

Alice calculates her public key with `Ya = G^Xa mod N`

Bob calculates her public key with `Yb = G^Xb mod N`

Notice it's really hard to figure out the private key, even if you know G, N, and 
the public key. It's easy to calculate exponents, but it's hard to calculate logrithms.

### Exchange public keys

Swap the keys!

### Combine my private key with the other person's public key

Alice's secret key is `Ka = Yb * Xa mod N`
Bob's secret key is `Kb = Ya * Xb mod N`

If we did it right, Ka and Kb are the same thing!

[jekyll-gh]: https://github.com/jekyll/jekyll
[jekyll]:    http://jekyllrb.com
[primitive]: https://en.wikipedia.org/wiki/Primitive_root_modulo_n
